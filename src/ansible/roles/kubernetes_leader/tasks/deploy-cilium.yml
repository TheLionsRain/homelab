---
- name: Create Cilium Helm values directory exists
  ansible.builtin.file:
    path: /opt/kubernetes/helm/cilium
    state: directory
    mode: '0755'
    owner: "{{ ansible_user }}"
  become: true

- name: Template Cilium Helm values file
  ansible.builtin.template:
    src: cilium/values.yml.jinja2
    dest: /opt/kubernetes/helm/cilium/values.yml
    mode: '0644'

- name: Check if Cilium Helm release exists
  ansible.builtin.command: helm list --namespace kube-system --filter '^cilium$' --output json
  register: helm_cilium_status
  changed_when: false

- name: Set fact if Cilium is already installed
  ansible.builtin.set_fact:
    cilium_installed: "{{ (helm_cilium_status.stdout | from_json) | length > 0 }}"

- name: Fetch latest Cilium CLI version
  ansible.builtin.uri:
    url: https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt
    return_content: true
  register: cilium_cli_version
  when: not cilium_installed

- name: Determine CLI architecture
  ansible.builtin.set_fact:
    cli_arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"
  when: not cilium_installed

- name: Download Cilium CLI tarball and checksum
  ansible.builtin.get_url:
    url: "https://github.com/cilium/cilium-cli/releases/download/\
      {{ cilium_cli_version.content | trim }}/\
      cilium-linux-{{ cli_arch }}.tar.gz{{ item }}"
    dest: "/tmp/cilium-linux-{{ cli_arch }}.tar.gz{{ item }}"
    mode: '0644'
  loop:
    - ""
    - ".sha256sum"
  when: not cilium_installed

- name: Verify downloaded Cilium CLI checksum
  ansible.builtin.command: sha256sum --check cilium-linux-{{ cli_arch }}.tar.gz.sha256sum
  args:
    chdir: /tmp
  register: sha256_check
  changed_when: false
  failed_when: "'OK' not in sha256_check.stdout"
  when: not cilium_installed

- name: Extract Cilium CLI binary
  become: true
  ansible.builtin.unarchive:
    src: "/tmp/cilium-linux-{{ cli_arch }}.tar.gz"
    dest: /usr/local/bin
    remote_src: true
    extra_opts: [--strip-components=0]
  when: not cilium_installed

- name: Clean up Cilium CLI tarball and checksum
  ansible.builtin.file:
    path: "/tmp/cilium-linux-{{ cli_arch }}.tar.gz{{ item }}"
    state: absent
  loop:
    - ""
    - ".sha256sum"
  when: not cilium_installed

- name: Install Cilium via CLI
  ansible.builtin.command: >
    cilium install
    --version v1.17.3
    --set kubeProxyReplacement=true
    --set k8sServiceHost="{{ ansible_host }}"
    --set k8sServicePort=6443
    --set l2announcements.enabled=true
    --set l2announcements.leaseDuration="3s"
    --set l2announcements.leaseRenewDeadline="1s"
    --set l2announcements.leaseRetryPeriod="500ms"
    --set devices="{{ '{' + cilium_network_interfaces | join(',') + '}' }}"
    --set externalIPs.enabled=true
    --set operator.replicas=2
    --set vlan-bpf-bypass=0
    --set ipam.operator.clusterPoolIPv4PodCIDRList="10.42.0.0/16"
  register: cilium_install_result
  changed_when: "'already installed' not in cilium_install_result.stderr"
  when: not cilium_installed

- name: Wait for Cilium to be ready
  ansible.builtin.wait_for:
    timeout: 10
  delegate_to: localhost
  when: not cilium_installed

- name: Ensure Cilium manifest directory exists
  ansible.builtin.file:
    path: /opt/kubernetes/manifests/cilium
    state: directory
    mode: '0755'
    owner: "{{ ansible_user }}"
  become: true

- name: Template L2 announcement policy manifest
  ansible.builtin.template:
    src: cilium/l2-announcement-policy.yml.jinja2
    dest: /opt/kubernetes/manifests/cilium/l2-announcement-policy.yml
    mode: '0644'

- name: Apply L2 announcement policy
  kubernetes.core.k8s:
    src: /opt/kubernetes/manifests/cilium/l2-announcement-policy.yml
    state: present

- name: Template Cilium IP pool manifest
  ansible.builtin.template:
    src: cilium/ippool.yml.jinja2
    dest: /opt/kubernetes/manifests/cilium/ippool.yml
    mode: '0644'

- name: Apply Cilium IP pool manifest
  kubernetes.core.k8s:
    src: /opt/kubernetes/manifests/cilium/ippool.yml
    state: present
